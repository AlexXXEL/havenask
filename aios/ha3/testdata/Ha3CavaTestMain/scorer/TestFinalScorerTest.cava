package mainse;

import ha3.*;
import suez.turing.ScorerProvider;
import mock.*;
import cava.util.*;

//
// 深度粗排后再执行的final score阶段，只有CavaScorerTestHelper(suez.turing.ScorerProvider),
//     没有CavaHa3ScoerTestHelper(ha3.ScorerProvider),两者接口有差异
//
class TestFinalScorerTest {
    boolean testProcess() {
        {
            // case 0

            CavaScorerTestHelper helper = CavaScorerTestHelper.create();
            //FinalScorer scorer = new FinalScorer();
            TestFinalScorer scorer = TestFinalScorer.create();

            // 数组多大，就需要为数组中的每个元素赋值，否则CString类型默认值为null,会导致segment fault
            CString[] dv = new CString[2];
            dv[0] = "0.85";
            dv[1] = "0.11";
            helper.setDoubleAttribute("rank_predict_score", dv);
            helper.setTraceLevel("DEBUG");
            suez.turing.ScorerProvider provider = helper.getScorerProvider();
            TestUnit.assertEquals(scorer.init(provider), true, "init 0");
            helper.println(helper.getQueryTraceStr());

            MatchDoc doc0 = helper.getMatchDoc(0);
            double v0 = scorer.process(doc0);
            MatchDoc doc00 = helper.getMatchDoc(0);
            double v00 = scorer.process(doc0);
            MatchDoc doc1 = helper.getMatchDoc(1);
            double v1 = scorer.process(doc1);

            TestUnit.assertEquals(v0, (double)0.85, "score 0");
            TestUnit.assertEquals(v00, (double)0.85, "score 00");
            TestUnit.assertEquals(v1, (double)0.11, "score 1");
            helper.println(helper.getQueryTraceStr());
            helper.println(helper.getDocTraceStr(doc0));
            helper.println(helper.getDocTraceStr(doc00));
            helper.println(helper.getDocTraceStr(doc1));
        }
        return true;
    }

    static int main() {
        TestFinalScorerTest test = new TestFinalScorerTest();
        if (!test.testProcess()) {
            return -1;
        }
        return 0;
    }
}
