package mainse;

import ha3.*;
import suez.turing.ScorerProvider;
import mock.*;
import cava.util.*;

class TestFinalScorerByHa3ScorerProviderTest {
    boolean testProcess() {
        {
            CavaHa3ScorerTestHelper helper = CavaHa3ScorerTestHelper.create();
            TestFinalScorer scorer = TestFinalScorer.create();

            helper.setDoubleAttribute("rank_predict_score", "0.85");
            helper.setTraceLevel("DEBUG");
            ha3.ScorerProvider provider = helper.getScorerProvider();
            // cast ha3.ScorerProvider to suez.turing.ScorerProvider
            suez.turing.ScorerProvider turingProvider = helper.getTuringScorerProvider();
            TestUnit.assertEquals(scorer.init(turingProvider), true, "init 0");

            MatchDoc doc0 = helper.getMatchDoc(provider);
            double v0 = scorer.process(doc0);

            TestUnit.assertEquals(v0, (double)0.85, "score 0");
            helper.println(helper.getQueryTraceStr(provider));
            helper.println(helper.getDocTraceStr(doc0));
        }
        return true;
    }

    static int main() {
        TestFinalScorerByHa3ScorerProviderTest test =
            new TestFinalScorerByHa3ScorerProviderTest();
        if (!test.testProcess()) {
            return -1;
        }
        return 0;
    }
}
