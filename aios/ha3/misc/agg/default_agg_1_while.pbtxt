node {
  name: "ha3_request"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "init_request"
  op: "RequestInitOp"
  input: "ha3_request"
}
node {
  name: "create_layer_metas"
  op: "LayerMetasCreateOp"
  input: "init_request"
}
node {
  name: "split_ranges"
  op: "RangeSplitOp"
  input: "create_layer_metas"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
}
node {
  name: "prepare_expression_resource"
  op: "PrepareExpressionResourceOp"
  input: "init_request"
}
node {
  name: "prepare_seek_iterator"
  op: "SeekIteratorPrepareOp"
  input: "split_ranges"
  input: "prepare_expression_resource"
}
node {
  name: "agg_prepare"
  op: "AggPrepareOp"
  input: "prepare_expression_resource"
  input: "^prepare_seek_iterator"
  attr {
    key: "json_path"
    value {
      s: ""
    }
  }
  attr {
    key: "relative_path"
    value {
      s: ""
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "while/Enter"
  op: "Enter"
  input: "Const"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "while/Enter_1"
  op: "Enter"
  input: "prepare_seek_iterator"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "while/Enter_2"
  op: "Enter"
  input: "agg_prepare"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "while/Merge"
  op: "Merge"
  input: "while/Enter"
  input: "while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "while/Merge_1"
  op: "Merge"
  input: "while/Enter_1"
  input: "while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "while/Merge_2"
  op: "Merge"
  input: "while/Enter_2"
  input: "while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "while/cond_equal/x"
  op: "Const"
  input: "^while/Merge"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "while/cond_equal"
  op: "Equal"
  input: "while/cond_equal/x"
  input: "while/Merge"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "while/LoopCond"
  op: "LoopCond"
  input: "while/cond_equal"
}
node {
  name: "while/Switch"
  op: "Switch"
  input: "while/Merge"
  input: "while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@while/Merge"
      }
    }
  }
}
node {
  name: "while/Switch_1"
  op: "Switch"
  input: "while/Merge_1"
  input: "while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@while/Merge_1"
      }
    }
  }
}
node {
  name: "while/Switch_2"
  op: "Switch"
  input: "while/Merge_2"
  input: "while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@while/Merge_2"
      }
    }
  }
}
node {
  name: "while/Identity"
  op: "Identity"
  input: "while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "while/Identity_1"
  op: "Identity"
  input: "while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "while/Identity_2"
  op: "Identity"
  input: "while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "while/seek_docs"
  op: "SeekOp"
  input: "while/Identity_1"
  attr {
    key: "batch_size"
    value {
      i: 10240
    }
  }
}
node {
  name: "while/agg_docs"
  op: "AggregatorOp"
  input: "while/Identity_2"
  input: "while/seek_docs:1"
}
node {
  name: "while/release_docs"
  op: "MatchDocReleaseOp"
  input: "while/seek_docs:2"
  input: "while/agg_docs:1"
}
node {
  name: "while/NextIteration"
  op: "NextIteration"
  input: "while/release_docs"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "while/NextIteration_1"
  op: "NextIteration"
  input: "while/seek_docs"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "while/NextIteration_2"
  op: "NextIteration"
  input: "while/agg_docs"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "while/Exit"
  op: "Exit"
  input: "while/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "while/Exit_1"
  op: "Exit"
  input: "while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "while/Exit_2"
  op: "Exit"
  input: "while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "AggMergeOp"
  op: "AggMergeOp"
  input: "while/Exit_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
}
node {
  name: "ha3_result"
  op: "AggResultConstructOp"
  input: "AggMergeOp"
}
node {
  name: "ha3_search_done"
  op: "NoOp"
  input: "^ha3_result"
}
versions {
  producer: 24
}
