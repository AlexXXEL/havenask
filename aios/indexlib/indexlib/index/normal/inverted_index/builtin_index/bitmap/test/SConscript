# -*- mode: python -*-

Import('env')
env = env.Clone()

cpps = [str(fn) for fn in Glob('*.cpp') if 'unittest.cpp' not in str(fn)]
env.aSharedLibrary(target='indexlib_bitmaptest', source = cpps)

bitmap_ut_test_sources = [
    '#indexlib/test/dotest.cpp',
    'in_mem_bitmap_index_segment_reader_unittest.cpp',
    'bitmap_index_reader_unittest.cpp',
    'in_mem_bitmap_index_decoder_unittest.cpp',
    'bitmap_posting_iterator_unittest.cpp',
    'single_bitmap_posting_iterator_unittest.cpp',
    'bitmap_posting_writer_unittest.cpp',
    'bitmap_index_writer_unittest.cpp',
    'bitmap_posting_decoder_unittest.cpp',
    'on_disk_bitmap_index_iterator_unittest.cpp',
    'bitmap_posting_merger_unittest.cpp',
]

env.aTest(target = 'indexlib_bitmap_unittest',
          source = bitmap_ut_test_sources,
          LIBS= ['indexlib_bitmaptest',
                 'indexlib_indextest_common',
                 'indexlib_test',
                 'indexlib_testlib',
                 'indexlib_partition',
                 'indexlib_merger',
                 'indexlib_table',
                 'indexlib_index',
                 'indexlib_index_base',
                 'indexlib_document',
                 'indexlib_common',
                 'indexlib_plugin',
                 'indexlib_config',
                 'indexlib_file_system',
                 'indexlib_storage',
                 'indexlib_util',
                 'indexlib_misc',
                 'gtest',
                 'gmock',
                 'pthread'
                 ])

Return([])
