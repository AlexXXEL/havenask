# -*- mode: python -*-

Import('env')
env = env.Clone()

cpps = [str(fn) for fn in Glob('*.cpp') if 'unittest.cpp' not in str(fn)]
env.aSharedLibrary(target='indexlib_adaptive_bitmaptest', source = cpps)

adaptive_bitmap_test_sources = [
    '#indexlib/test/dotest.cpp',
    'adaptive_bitmap_index_writer_unittest.cpp',
    'adaptive_bitmap_index_writer_creator_unittest.cpp',
    'adaptive_bitmap_trigger_creator_unittest.cpp',
]

adaptive_bitmap_libs = [
    'indexlib_adaptive_bitmaptest',
    'indexlib_indextest_common',
    'indexlib_test',
    'indexlib_testlib',
    'indexlib_partition',
    'indexlib_merger',
    'indexlib_table',
    'indexlib_index',
    'indexlib_index_base',
    'indexlib_document',
    'indexlib_common',
    'indexlib_plugin',
    'indexlib_config',
    'indexlib_file_system',
    'indexlib_storage',
    'indexlib_util',
    'indexlib_misc',
    'gmock',
    'gtest',
    'pthread'
]

env.aTest('ie_index_adaptive_bitmap_unittest', adaptive_bitmap_test_sources, 
          LIBS=adaptive_bitmap_libs)


Return([])
